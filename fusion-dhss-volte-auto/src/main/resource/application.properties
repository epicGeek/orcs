debug=true
#spring.profiles.active=data-primary,data-store-2nd
spring.main.web-environment=false

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://10.221.30.103:3306/fusion_shanghai?characterEncoding=UTF-8
#spring.datasource.username = root
#spring.datasource.password = mysql
spring.datasource.url = jdbc:mysql://localhost:3306/fusion_shanghai_chinamobile?characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = 8133158


spring.datasource.auto-commit=false
spring.datasource.validation-interval= 1000
spring.datasource.validation-query= SELECT 1
spring.datasource.test-on-borrow = true
spring.datasource.test-while-idle= true
spring.datasource.time-between-eviction-runs-millis=3600000
spring.datasource.min-evictable-idle-time-millis=600000
spring.datasource.jmx-enabled=true
spring.data.rest.default-page-size=10
spring.data.rest.return-body-on-create=true
spring.data.rest.return-body-on-update=true
spring.datasource.initial-size=5

# Specify the DBMS
spring.jpa.database = mysql
# Show or not log for each sql query
spring.jpa.show-sql = false
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = none
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy

# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
banner.location=banner.src
spring.mvc.date-format=yyyy-MM-dd HH:mm:ss
spring.freemarker.checkTemplateLocation=false

#spring.volte.data-file-dir = /root/volte/txt/
spring.volte.data-file-dir = D:/volte/
spring.volte.load-sql = LOAD DATA LOCAL INFILE #loadFileName# INTO TABLE volte_message FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n' (imsi,msisdn,action_status,start_time,cost_time,auto_prov,flow_direction,ne_name) 
spring.volte.insert-counter-data-sql = INSERT INTO volte_counter \
                                       (`subs_hss_2_boss`, `rates_hss_2_boss`, `subs_boss_2_hss_t`, `rates_boss_2_hss_t`, `subs_boss_2_hss_o`, `rates_boss_2_hss_o`, `ads_boss_hss`,`start_time`,`stop_time`,`dn`,`interval_time`,`dhss`,`rates_hss_2_boss_num`, `rates_boss_2_hss_t_num`, `rates_boss_2_hss_o_num`,`file_abs_dir`) \
                                       values \
                                       (:SubsHSS2BOSS, :RatesHSS2BOSS, :SubsBOSS2HSS_T, :RatesBOSS2HSS_T, :SubsBOSS2HSS_O, :RatesBOSS2HSS_O, :ADsBOSSHSS,replace(:realStartTime,'+08:00:00',''),replace(:realStopTime,'+08:00:00',''),:DN,:interval,:dhss,:RatesHSS2BOSS_NUM, :RatesBOSS2HSS_T_NUM, :RatesBOSS2HSS_O_NUM,:file_abs_dir)
spring.volte.update-counter-flag-sql = UPDATE volte_counter set is_counted = 'yes' where id = ?
spring.volte.SubsHSS2BOSSCOUNT=80
spring.volte.load-sql-hss2-boss = LOAD DATA LOCAL INFILE #loadFileName# INTO TABLE volte_message FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n' (imsi,msisdn,action_status,start_time,cost_time,flow_direction,ne_name) 
